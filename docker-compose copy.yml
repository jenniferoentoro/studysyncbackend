version: '3.8'

networks:
  study_sync_network:
    driver: bridge
services:

  mongodb_container:
    image: mongo:latest
    container_name: mongodb_container
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - study_sync_network

  api-gateway-service:
    build:
      context: ./APIGateway
      dockerfile: Dockerfile
    container_name: api_gateway_service
    ports:
      - "8080:8080"
    networks:
      - study_sync_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_study_sync
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - study_sync_network

  mongodb_container-source:
    image: mongo:latest
    container_name: mongodb_container-source
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27018:27017
    volumes:
      - mongodb_data_container_source:/data/db
    networks:
      - study_sync_network
  source_service:
    build:
      context: .\source_service
      dockerfile: Dockerfile
    container_name: source_service
    ports:
      - "8082:8080"
    depends_on:
      - mongodb_container-source
      - rabbitmq
    networks:
      - study_sync_network

  user_service:
    build:
      context: .\user_service
      dockerfile: Dockerfile
    container_name: user_service
    ports:
      - "8081:8080"
    depends_on:
      - mongodb_container
      - rabbitmq
    networks:
      - study_sync_network
  redis_cache:
    image: redis
    container_name: redis_cache
    ports:
      - "6379:6379"
    networks:
      - study_sync_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alert.rules.yml:/etc/prometheus/alert.rules.yml
    networks:
      - study_sync_network
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on: 
      - prometheus
    networks:
      - study_sync_network

  # nginx:
  #   container_name: nginx
  #   build: 
  #     context: .\nginx
  #     dockerfile: Dockerfile
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   restart: always
  #   networks:
  #     - study_sync_network

  frontend:
    build:
      context: .\frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "5173:5173"
    networks:
      - study_sync_network
volumes:
  mongodb_data_container:
  mongodb_data_container_source: