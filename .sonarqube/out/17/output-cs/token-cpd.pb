À'
zd:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\Authentication\FirebaseAuthenticationHandler.cs
	namespace 	
user_service
 
. 
Authentication %
{ 
public 

class )
FirebaseAuthenticationHandler .
:/ 0!
AuthenticationHandler1 F
<F G'
AuthenticationSchemeOptionsG b
>b c
{ 
private 
readonly 
FirebaseApp $
_firebaseApp% 1
;1 2
public )
FirebaseAuthenticationHandler ,
(, -
IOptionsMonitor- <
<< ='
AuthenticationSchemeOptions= X
>X Y
optionsZ a
,a b
ILoggerFactoryc q
loggerr x
,x y

UrlEncoder	z Ñ
encoder
Ö å
,
å ç
ISystemClock
é ö
clock
õ †
,
† °
FirebaseApp
¢ ≠
firebaseApp
Æ π
)
π ∫
:
ª º
base
Ω ¡
(
¡ ¬
options
¬ …
,
…  
logger
À —
,
— “
encoder
” ⁄
,
⁄ €
clock
‹ ·
)
· ‚
{ 	
_firebaseApp 
= 
firebaseApp &
;& '
} 	
	protected 
override 
async  
Task! %
<% &
AuthenticateResult& 8
>8 9#
HandleAuthenticateAsync: Q
(Q R
)R S
{ 	
if 
( 
! 
Context 
. 
Request  
.  !
Headers! (
.( )
ContainsKey) 4
(4 5
$str5 D
)D E
)E F
{ 
return 
AuthenticateResult )
.) *
NoResult* 2
(2 3
)3 4
;4 5
} 
string 
bearerToken 
=  
Context! (
.( )
Request) 0
.0 1
Headers1 8
[8 9
$str9 H
]H I
;I J
if   
(   
bearerToken   
==   
null   #
||  $ &
!  ' (
bearerToken  ( 3
.  3 4

StartsWith  4 >
(  > ?
$str  ? H
)  H I
)  I J
{!! 
return"" 
AuthenticateResult"" )
."") *
Fail""* .
("". /
$str""/ M
)""M N
;""N O
}## 
string%% 
token%% 
=%% 
bearerToken%% &
.%%& '
	Substring%%' 0
(%%0 1
$str%%1 :
.%%: ;
Length%%; A
)%%A B
;%%B C
try'' 
{(( 
FirebaseToken)) 
firebaseToken)) +
=)), -
await)). 3
FirebaseAuth))4 @
.))@ A
GetAuth))A H
())H I
_firebaseApp))I U
)))U V
.))V W
VerifyIdTokenAsync))W i
())i j
token))j o
)))o p
;))p q
return-- 
AuthenticateResult-- )
.--) *
Success--* 1
(--1 2
new--2 5 
AuthenticationTicket--6 J
(--J K
new--K N
ClaimsPrincipal--O ^
(--^ _
new--_ b
List--c g
<--g h
ClaimsIdentity--h v
>--v w
{--w x
new.. 
ClaimsIdentity.. "
(.." #
ToClaims..# +
(..+ ,
firebaseToken.., 9
...9 :
Claims..: @
)..@ A
,..A B
nameof..C I
(..I J)
FirebaseAuthenticationHandler..J g
)..g h
)..h i
}// 
)// 
,// 
JwtBearerDefaults// !
.//! " 
AuthenticationScheme//" 6
)//6 7
)//7 8
;//8 9
}00 
catch11 
(11 
	Exception11 
e11 
)11 
{22 
return33 
AuthenticateResult33 )
.33) *
Fail33* .
(33. /
e33/ 0
.330 1
Message331 8
)338 9
;339 :
}44 
}77 	
private99 
IEnumerable99 
<99 
Claim99 !
>99! "
ToClaims99# +
(99+ ,
IReadOnlyDictionary99, ?
<99? @
string99@ F
,99F G
object99H N
>99N O
claims99P V
)99V W
{:: 	
return;; 
new;; 
List;; 
<;; 
Claim;; !
>;;! "
{<< 
new@@ 
Claim@@ 
(@@ 
$str@@  
,@@  !
claims@@" (
[@@( )
$str@@) /
]@@/ 0
.@@0 1
ToString@@1 9
(@@9 :
)@@: ;
)@@; <
,@@< =
}AA 
;AA 
}BB 	
}CC 
}DD “Ç
hd:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\Controllers\UserController.cs
	namespace 	
user_service
 
. 
Controllers "
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class 
UserController 
:  !
ControllerBase" 0
{ 
private 
readonly 
IUserService %
_userService& 2
;2 3
private 
readonly 
IMapper  
_mapper! (
;( )
public 
UserController 
( 
IUserService *
userService+ 6
,6 7
IMapper8 ?
mapper@ F
)F G
{ 	
_userService 
= 
userService &
;& '
_mapper 
= 
mapper 
; 
} 	
[ 	
HttpGet	 
( 
$str 
) 
] 
public"" 
async"" 
Task"" 
<"" 
IActionResult"" '
>""' (
GetAll"") /
(""/ 0
)""0 1
{## 	
var$$ 
users$$ 
=$$ 
await$$ 
_userService$$ *
.$$* +
GetAllUsers$$+ 6
($$6 7
)$$7 8
;$$8 9
return%% 
Ok%% 
(%% 
_mapper%% 
.%% 
Map%% !
<%%! "
IEnumerable%%" -
<%%- .
UserDto%%. 5
>%%5 6
>%%6 7
(%%7 8
users%%8 =
)%%= >
)%%> ?
;%%? @
}&& 	
[(( 	
	Authorize((	 
](( 
[)) 	
HttpGet))	 
()) 
$str)) 
))) 
])) 
[** 	
	Authorize**	 
(** 
Policy** 
=** 
$str** #
)**# $
]**$ %
public++ 
async++ 
Task++ 
<++ 
ActionResult++ &
<++& '
UserDto++' .
>++. /
>++/ 0
GetUserById++1 <
(++< =
int++= @
id++A C
)++C D
{,, 	
var-- 
user-- 
=-- 
await-- 
_userService-- )
.--) *
GetUser--* 1
(--1 2
id--2 4
)--4 5
;--5 6
if.. 
(.. 
user.. 
==.. 
null.. 
).. 
{// 
return00 
NotFound00 
(00  
)00  !
;00! "
}11 
return22 
Ok22 
(22 
_mapper22 
.22 
Map22 !
<22! "
UserDto22" )
>22) *
(22* +
user22+ /
)22/ 0
)220 1
;221 2
}33 	
[55 	
	Authorize55	 
]55 
[66 	
HttpGet66	 
(66 
$str66  
)66  !
]66! "
public77 
ActionResult77 
<77 
UserDto77 #
>77# $
GetUserByEmail77% 3
(773 4
string774 :
email77; @
)77@ A
{88 	
var99 
user99 
=99 
_userService99 #
.99# $
GetUserByEmail99$ 2
(992 3
email993 8
)998 9
;999 :
if:: 
(:: 
user:: 
==:: 
null:: 
):: 
{;; 
return<< 
NotFound<< 
(<<  
)<<  !
;<<! "
}== 
return>> 
Ok>> 
(>> 
_mapper>> 
.>> 
Map>> !
<>>! "
UserDto>>" )
>>>) *
(>>* +
user>>+ /
)>>/ 0
)>>0 1
;>>1 2
}?? 	
[AA 	
HttpPostAA	 
(AA 
$strAA 
)AA 
]AA 
publicBB 
asyncBB 
TaskBB 
<BB 
ActionResultBB &
<BB& '
UserDtoBB' .
>BB. /
>BB/ 0

CreateUserBB1 ;
(BB; <
[BB< =
FromBodyBB= E
]BBE F
CreateUserDtoBBG T
userDtoBBU \
)BB\ ]
{CC 	
ifDD 
(DD 
!DD 

ModelStateDD 
.DD 
IsValidDD #
)DD# $
{EE 
returnFF 

BadRequestFF !
(FF! "

ModelStateFF" ,
)FF, -
;FF- .
}GG 
ifII 
(II 
!II 
EnumII 
.II 
TryParseII 
(II 
userDtoII &
.II& '
GradeII' ,
,II, -
outII. 1
GradeII2 7
gradeII8 =
)II= >
)II> ?
{JJ 
returnKK 

BadRequestKK !
(KK! "
$strKK" 8
)KK8 9
;KK9 :
}LL 
varNN 
userArgsNN 
=NN 
newNN 
UserRecordArgsNN -
(NN- .
)NN. /
{OO 
EmailPP 
=PP 
userDtoPP 
.PP  
EmailPP  %
,PP% &
EmailVerifiedQQ 
=QQ 
falseQQ  %
,QQ% &
PasswordRR 
=RR 
userDtoRR "
.RR" #
PasswordRR# +
,RR+ ,
DisplayNameSS 
=SS 
userDtoSS %
.SS% &
NameSS& *
,SS* +
DisabledTT 
=TT 
falseTT  
}UU 
;UU 

UserRecordWW 

userRecordWW !
=WW" #
awaitWW$ )
FirebaseAuthWW* 6
.WW6 7
DefaultInstanceWW7 F
.WWF G
CreateUserAsyncWWG V
(WWV W
userArgsWWW _
)WW_ `
;WW` a
ifYY 
(YY 

userRecordYY 
!=YY 
nullYY "
)YY" #
{ZZ 
var[[ 
claims[[ 
=[[ 
new[[  

Dictionary[[! +
<[[+ ,
string[[, 2
,[[2 3
object[[4 :
>[[: ;
([[; <
)[[< =
{\\ 
{]] 
$str]] 
,]] 
$str]] $
}]]% &
,]]& '
}^^ 
;^^ 
await__ 
FirebaseAuth__ "
.__" #
DefaultInstance__# 2
.__2 3$
SetCustomUserClaimsAsync__3 K
(__K L

userRecord__L V
.__V W
Uid__W Z
,__Z [
claims__\ b
)__b c
;__c d
varaa 
useraa 
=aa 
newaa 
Useraa #
{bb 
Namecc 
=cc 
userDtocc "
.cc" #
Namecc# '
,cc' (
Emaildd 
=dd 
userDtodd #
.dd# $
Emaildd$ )
,dd) *
Gradeee 
=ee 
Gradeee !
.ee! "
Unknownee" )
,ee) *
Schoolff 
=ff 
$strff &
,ff& '
Rolegg 
=gg 
Rolegg 
.gg  
Usergg  $
}hh 
;hh 
_userServiceii 
.ii 

CreateUserii '
(ii' (
userii( ,
)ii, -
;ii- .
returnjj 
CreatedAtActionjj &
(jj& '
nameofjj' -
(jj- .
GetUserByIdjj. 9
)jj9 :
,jj: ;
newjj< ?
{jj@ A
idjjB D
=jjE F
userjjG K
.jjK L
IdjjL N
}jjO P
,jjP Q
userjjR V
)jjV W
;jjW X
}ll 
elsemm 
{nn 
returnoo 

BadRequestoo !
(oo! "
$stroo" 9
)oo9 :
;oo: ;
}pp 
}ss 	
[vv 	
HttpPostvv	 
(vv 
$strvv 
)vv 
]vv 
publicxx 
asyncxx 
Taskxx 
<xx 
ActionResultxx &
<xx& '
UserDtoxx' .
>xx. /
>xx/ 0
CreateAdminxx1 <
(xx< =
[xx= >
FromBodyxx> F
]xxF G
CreateAdminDtoxxH V
userDtoxxW ^
)xx^ _
{yy 	
ifzz 
(zz 
!zz 

ModelStatezz 
.zz 
IsValidzz #
)zz# $
{{{ 
return|| 

BadRequest|| !
(||! "

ModelState||" ,
)||, -
;||- .
}}} 
var~~ 
userArgs~~ 
=~~ 
new~~ 
UserRecordArgs~~ -
(~~- .
)~~. /
{ 
Email
ÄÄ 
=
ÄÄ 
userDto
ÄÄ 
.
ÄÄ  
Email
ÄÄ  %
,
ÄÄ% &
EmailVerified
ÅÅ 
=
ÅÅ 
false
ÅÅ  %
,
ÅÅ% &
Password
ÇÇ 
=
ÇÇ 
userDto
ÇÇ "
.
ÇÇ" #
Password
ÇÇ# +
,
ÇÇ+ ,
DisplayName
ÉÉ 
=
ÉÉ 
userDto
ÉÉ %
.
ÉÉ% &
Name
ÉÉ& *
,
ÉÉ* +
Disabled
ÑÑ 
=
ÑÑ 
false
ÑÑ  
}
ÖÖ 
;
ÖÖ 

UserRecord
áá 

userRecord
áá !
=
áá" #
await
áá$ )
FirebaseAuth
áá* 6
.
áá6 7
DefaultInstance
áá7 F
.
ááF G
CreateUserAsync
ááG V
(
ááV W
userArgs
ááW _
)
áá_ `
;
áá` a
if
ââ 
(
ââ 

userRecord
ââ 
==
ââ 
null
ââ "
)
ââ" #
{
ää 
return
ãã 

BadRequest
ãã !
(
ãã! "
$str
ãã" 9
)
ãã9 :
;
ãã: ;
}
åå 
var
èè 
claims
èè 
=
èè 
new
èè 

Dictionary
èè '
<
èè' (
string
èè( .
,
èè. /
object
èè0 6
>
èè6 7
(
èè7 8
)
èè8 9
{
êê 
{
ëë 
$str
ëë 
,
ëë 
$str
ëë %
}
ëë& '
,
ëë' (
}
íí 
;
íí 
await
ìì 
FirebaseAuth
ìì 
.
ìì 
DefaultInstance
ìì .
.
ìì. /&
SetCustomUserClaimsAsync
ìì/ G
(
ììG H

userRecord
ììH R
.
ììR S
Uid
ììS V
,
ììV W
claims
ììX ^
)
ìì^ _
;
ìì_ `
var
ïï 
user
ïï 
=
ïï 
new
ïï 
User
ïï 
{
ññ 
Name
óó 
=
óó 
userDto
óó 
.
óó 
Name
óó #
,
óó# $
Email
òò 
=
òò 
userDto
òò 
.
òò  
Email
òò  %
,
òò% &
Grade
ôô 
=
ôô 
Grade
ôô 
.
ôô 
Unknown
ôô %
,
ôô% &
School
öö 
=
öö 
$str
öö "
,
öö" #
Role
õõ 
=
õõ 
Role
õõ 
.
õõ 
Admin
õõ !
}
úú 
;
úú 
_userService
ùù 
.
ùù 

CreateUser
ùù #
(
ùù# $
user
ùù$ (
)
ùù( )
;
ùù) *
return
ûû 
CreatedAtAction
ûû "
(
ûû" #
nameof
ûû# )
(
ûû) *
GetUserById
ûû* 5
)
ûû5 6
,
ûû6 7
new
ûû8 ;
{
ûû< =
id
ûû> @
=
ûûA B
user
ûûC G
.
ûûG H
Id
ûûH J
}
ûûK L
,
ûûL M
user
ûûN R
)
ûûR S
;
ûûS T
}
†† 	
[
¢¢ 	
	Authorize
¢¢	 
]
¢¢ 
[
££ 	
HttpPut
££	 
(
££ 
$str
££ 
)
££ 
]
££ 
public
§§ 
async
§§ 
Task
§§ 
<
§§ 
ActionResult
§§ &
<
§§& '
UserDto
§§' .
>
§§. /
>
§§/ 0

UpdateUser
§§1 ;
(
§§; <
[
§§< =
	FromRoute
§§= F
]
§§F G
int
§§H K
id
§§L N
,
§§N O
[
§§P Q
FromBody
§§Q Y
]
§§Y Z
UpdateUserDto
§§[ h
userDto
§§i p
)
§§p q
{
•• 	
if
¶¶ 
(
¶¶ 
!
¶¶ 

ModelState
¶¶ 
.
¶¶ 
IsValid
¶¶ #
)
¶¶# $
{
ßß 
return
®® 

BadRequest
®® !
(
®®! "

ModelState
®®" ,
)
®®, -
;
®®- .
}
©© 
if
´´ 
(
´´ 
!
´´ 
Enum
´´ 
.
´´ 
TryParse
´´ 
(
´´ 
userDto
´´ &
.
´´& '
Grade
´´' ,
,
´´, -
out
´´. 1
Grade
´´2 7
grade
´´8 =
)
´´= >
)
´´> ?
{
¨¨ 
return
ÆÆ 

BadRequest
ÆÆ !
(
ÆÆ! "
$str
ÆÆ" 8
)
ÆÆ8 9
;
ÆÆ9 :
}
ØØ 
var
±± 
user
±± 
=
±± 
await
±± 
_userService
±± )
.
±±) *
GetUser
±±* 1
(
±±1 2
id
±±2 4
)
±±4 5
;
±±5 6
if
≤≤ 
(
≤≤ 
user
≤≤ 
==
≤≤ 
null
≤≤ 
)
≤≤ 
{
≥≥ 
return
¥¥ 
NotFound
¥¥ 
(
¥¥  
)
¥¥  !
;
¥¥! "
}
µµ 
user
∑∑ 
.
∑∑ 
Name
∑∑ 
=
∑∑ 
userDto
∑∑ 
.
∑∑  
Name
∑∑  $
;
∑∑$ %
user
∏∏ 
.
∏∏ 
Grade
∏∏ 
=
∏∏ 
grade
∏∏ 
;
∏∏ 
user
ππ 
.
ππ 
School
ππ 
=
ππ 
userDto
ππ !
.
ππ! "
School
ππ" (
;
ππ( )
_userService
∫∫ 
.
∫∫ 

UpdateUser
∫∫ #
(
∫∫# $
user
∫∫$ (
)
∫∫( )
;
∫∫) *
return
ºº 
Ok
ºº 
(
ºº 
_mapper
ºº 
.
ºº 
Map
ºº !
<
ºº! "
UserDto
ºº" )
>
ºº) *
(
ºº* +
user
ºº+ /
)
ºº/ 0
)
ºº0 1
;
ºº1 2
}
ΩΩ 	
[
øø 	
	Authorize
øø	 
]
øø 
[
¿¿ 	

HttpDelete
¿¿	 
(
¿¿ 
$str
¿¿ 
)
¿¿ 
]
¿¿  
public
¡¡ 
async
¡¡ 
Task
¡¡ 
<
¡¡ 
ActionResult
¡¡ &
>
¡¡& '

DeleteUser
¡¡( 2
(
¡¡2 3
int
¡¡3 6
id
¡¡7 9
)
¡¡9 :
{
¬¬ 	
var
√√ 
user
√√ 
=
√√ 
await
√√ 
_userService
√√ )
.
√√) *
GetUser
√√* 1
(
√√1 2
id
√√2 4
)
√√4 5
;
√√5 6
if
ƒƒ 
(
ƒƒ 
user
ƒƒ 
==
ƒƒ 
null
ƒƒ 
)
ƒƒ 
{
≈≈ 
return
∆∆ 
NotFound
∆∆ 
(
∆∆  
)
∆∆  !
;
∆∆! "
}
«« 
_userService
»» 
.
»» 

DeleteUser
»» #
(
»»# $
id
»»$ &
)
»»& '
;
»»' (

UserRecord
ÀÀ 

userRecord
ÀÀ !
=
ÀÀ" #
await
ÀÀ$ )
FirebaseAuth
ÀÀ* 6
.
ÀÀ6 7
DefaultInstance
ÀÀ7 F
.
ÀÀF G!
GetUserByEmailAsync
ÀÀG Z
(
ÀÀZ [
user
ÀÀ[ _
.
ÀÀ_ `
Email
ÀÀ` e
)
ÀÀe f
;
ÀÀf g
if
ÕÕ 
(
ÕÕ 

userRecord
ÕÕ 
==
ÕÕ 
null
ÕÕ "
)
ÕÕ" #
{
ŒŒ 
return
œœ 
NotFound
œœ 
(
œœ  
)
œœ  !
;
œœ! "
}
–– 
await
““ 
FirebaseAuth
““ 
.
““ 
DefaultInstance
““ .
.
““. /
DeleteUserAsync
““/ >
(
““> ?

userRecord
““? I
.
““I J
Uid
““J M
)
““M N
;
““N O
return
’’ 
Ok
’’ 
(
’’ 
_mapper
’’ 
.
’’ 
Map
’’ !
<
’’! "
UserDto
’’" )
>
’’) *
(
’’* +
user
’’+ /
)
’’/ 0
)
’’0 1
;
’’1 2
}
÷÷ 	
}
ÊÊ 
}ÁÁ ⁄
_d:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\Data\AppDbContext.cs
	namespace 	
user_service
 
. 
Data 
{ 
public 

class 
AppDbContext 
: 
	DbContext  )
{ 
	protected		 
readonly		 
IConfiguration		 )
Configuration		* 7
;		7 8
public 
AppDbContext 
( 
IConfiguration *
configuration+ 8
)8 9
{ 	
Configuration 
= 
configuration )
;) *
} 	
	protected 
override 
void 
OnConfiguring  -
(- .#
DbContextOptionsBuilder. E
optionsBuilderF T
)T U
{ 	
optionsBuilder 
. 
	UseNpgsql $
($ %
Configuration% 2
.2 3
GetConnectionString3 F
(F G
$strG W
)W X
)X Y
;Y Z
} 	
public 
DbSet 
< 
User 
> 
Users  
{! "
get# &
;& '
set( +
;+ ,
}- .
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. 
Entity 
<  
User  $
>$ %
(% &
)& '
. 
Property 
( 
u 
=> 
u  
.  !
Role! %
)% &
. 
HasConversion 
< 
string %
>% &
(& '
)' (
;( )
modelBuilder 
. 
Entity 
<  
User  $
>$ %
(% &
)& '
. 
Property 
( 
u 
=> 
u  
.  !
Grade! &
)& '
. 
HasConversion 
< 
string %
>% &
(& '
)' (
;( )
} 	
}   
}!! Æ
ad:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\Dtos\CreateAdminDto.cs
	namespace 	
user_service
 
. 
Dtos 
{ 
public		 

class		 
CreateAdminDto		 
{

 
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
=* +
null, 0
!0 1
;1 2
[ 	
Required	 
] 
[ 	
RegularExpression	 
( 
$str E
,E F
ErrorMessageG S
=T U
$str	V ≤
)
≤ ≥
]
≥ ¥
[ 	
	MinLength	 
( 
$num 
, 
ErrorMessage "
=# $
$str% S
)S T
]T U
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
null/ 3
!3 4
;4 5
[ 	
Required	 
] 
[ 	
RegularExpression	 
( 
$str +
,+ ,
ErrorMessage- 9
=: ;
$str< ]
)] ^
]^ _
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
null+ /
!/ 0
;0 1
} 
} ≈
`d:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\Dtos\CreateUserDto.cs
	namespace 	
user_service
 
. 
Dtos 
{ 
public		 

class		 
CreateUserDto		 
{

 
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
=* +
null, 0
!0 1
;1 2
[ 	
Required	 
] 
[ 	
RegularExpression	 
( 
$str E
,E F
ErrorMessageG S
=T U
$str	V ≤
)
≤ ≥
]
≥ ¥
[ 	
	MinLength	 
( 
$num 
, 
ErrorMessage "
=# $
$str% S
)S T
]T U
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
null/ 3
!3 4
;4 5
[ 	
Required	 
] 
[ 	
RegularExpression	 
( 
$str +
,+ ,
ErrorMessage- 9
=: ;
$str< ]
)] ^
]^ _
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
null+ /
!/ 0
;0 1
[ 	
Required	 
] 
public 
string 
Grade 
{ 
get !
;! "
set# &
;& '
}( )
=* +
null, 0
!0 1
;1 2
[ 	
Required	 
] 
public 
string 
School 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
null- 1
!1 2
;2 3
} 
}   Ë	
_d:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\Dtos\LoginUserDto.cs
	namespace 	
user_service
 
. 
Dtos 
{ 
public		 

class		 
LoginUserDto		 
{

 
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
=* +
null, 0
!0 1
;1 2
[ 	
Required	 
] 
[ 	
RegularExpression	 
( 
$str E
,E F
ErrorMessageG S
=T U
$str	V ≤
)
≤ ≥
]
≥ ¥
[ 	
	MinLength	 
( 
$num 
, 
ErrorMessage "
=# $
$str% S
)S T
]T U
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
null/ 3
!3 4
;4 5
} 
} Î
`d:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\Dtos\UpdateUserDto.cs
	namespace 	
user_service
 
. 
Dtos 
{ 
public		 

class		 
UpdateUserDto		 
{

 
[ 	
RegularExpression	 
( 
$str +
,+ ,
ErrorMessage- 9
=: ;
$str< ]
)] ^
]^ _
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
null+ /
!/ 0
;0 1
public 
string 
Grade 
{ 
get !
;! "
set# &
;& '
}( )
=* +
null, 0
!0 1
;1 2
public 
string 
School 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
null- 1
!1 2
;2 3
} 
} È

Zd:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\Dtos\UserDto.cs
	namespace 	
user_service
 
. 
Dtos 
{ 
public		 

class		 
UserDto		 
{

 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
=* +
null, 0
!0 1
;1 2
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
null+ /
!/ 0
;0 1
public 
Grade 
Grade 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
School 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
null- 1
!1 2
;2 3
public 
Role 
Role 
{ 
get 
; 
set  #
;# $
}% &
} 
} ü
ld:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\Migrations\20240315121037_init.cs
	namespace 	
user_service
 
. 

Migrations !
{ 
public		 

partial		 
class		 
init		 
:		 
	Migration		  )
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 :
,: ;
nullable< D
:D E
falseF K
)K L
. 

Annotation #
(# $
$str$ D
,D E)
NpgsqlValueGenerationStrategyF c
.c d#
IdentityByDefaultColumnd {
){ |
,| }
Email 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
type1 5
:5 6
$str7 =
,= >
nullable? G
:G H
falseI N
)N O
,O P
Password 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: @
,@ A
nullableB J
:J K
falseL Q
)Q R
,R S
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 <
,< =
nullable> F
:F G
falseH M
)M N
,N O
Grade 
= 
table !
.! "
Column" (
<( )
int) ,
>, -
(- .
type. 2
:2 3
$str4 =
,= >
nullable? G
:G H
falseI N
)N O
,O P
School 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
type2 6
:6 7
$str8 >
,> ?
nullable@ H
:H I
falseJ O
)O P
,P Q
Role 
= 
table  
.  !
Column! '
<' (
int( +
>+ ,
(, -
type- 1
:1 2
$str3 <
,< =
nullable> F
:F G
falseH M
)M N
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% /
,/ 0
x1 2
=>3 5
x6 7
.7 8
Id8 :
): ;
;; <
} 
) 
; 
} 	
	protected"" 
override"" 
void"" 
Down""  $
(""$ %
MigrationBuilder""% 5
migrationBuilder""6 F
)""F G
{## 	
migrationBuilder$$ 
.$$ 
	DropTable$$ &
($$& '
name%% 
:%% 
$str%% 
)%% 
;%% 
}&& 	
}'' 
}(( ¢
yd:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\Migrations\20240315152832_enumstringconvert.cs
	namespace 	
user_service
 
. 

Migrations !
{ 
public 

partial 
class 
enumstringconvert *
:+ ,
	Migration- 6
{		 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str 
, 
table 
: 
$str 
, 
type 
: 
$str 
, 
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
int# &
)& '
,' (
oldType 
: 
$str "
)" #
;# $
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str 
, 
table 
: 
$str 
, 
type 
: 
$str 
, 
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
int# &
)& '
,' (
oldType 
: 
$str "
)" #
;# $
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{   	
migrationBuilder!! 
.!! 
AlterColumn!! (
<!!( )
int!!) ,
>!!, -
(!!- .
name"" 
:"" 
$str"" 
,"" 
table## 
:## 
$str## 
,## 
type$$ 
:$$ 
$str$$ 
,$$  
nullable%% 
:%% 
false%% 
,%%  

oldClrType&& 
:&& 
typeof&& "
(&&" #
string&&# )
)&&) *
,&&* +
oldType'' 
:'' 
$str'' 
)''  
;''  !
migrationBuilder)) 
.)) 
AlterColumn)) (
<))( )
int))) ,
>)), -
())- .
name** 
:** 
$str** 
,** 
table++ 
:++ 
$str++ 
,++ 
type,, 
:,, 
$str,, 
,,,  
nullable-- 
:-- 
false-- 
,--  

oldClrType.. 
:.. 
typeof.. "
(.." #
string..# )
)..) *
,..* +
oldType// 
:// 
$str// 
)//  
;//  !
}00 	
}11 
}22 Ë
vd:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\Migrations\20240315170748_removepassword.cs
	namespace 	
user_service
 
. 

Migrations !
{ 
public 

partial 
class 
removepassword '
:( )
	Migration* 3
{		 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str  
,  !
table 
: 
$str 
) 
;  
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str  
,  !
table 
: 
$str 
, 
type 
: 
$str 
, 
nullable 
: 
false 
,  
defaultValue 
: 
$str  
)  !
;! "
} 	
} 
} Ì
Yd:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\Model\Grade.cs
	namespace 	
user_service
 
. 
Model 
{ 
public 

enum 
Grade 
{ 

Elementary 
, 
MiddleSchool  
,  !

HighSchool" ,
,, -
Bachelor. 6
,6 7
Master8 >
,> ?
Doctor@ F
,F G
	ProfessorH Q
,Q R
CollegeS Z
,Z [
Unknown\ c
,c d
} 
} œ
Xd:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\Model\Role.cs
	namespace 	
user_service
 
. 
Model 
{ 
public 

enum 
Role 
{ 
User 
, 
Admin 
} 
} ò
Xd:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\Model\User.cs
	namespace 	
user_service
 
. 
model 
{		 
public

 

class

 
User

 
{ 
[ 	
Key	 
] 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
[ 	
Required	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
=* +
null, 0
!0 1
;1 2
[ 	
Required	 
] 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
null+ /
!/ 0
;0 1
[ 	
Required	 
] 
public 
Grade 
Grade 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
] 
public 
string 
School 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
null- 1
!1 2
;2 3
[ 	
Required	 
] 
public 
Role 
Role 
{ 
get 
; 
set  #
;# $
}% &
} 
}   õ
dd:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\Profile\MappingProfile.cs
	namespace		 	
user_service		
 
.		 
Profile		 
{

 
public 

class 
MappingProfile 
:  !

AutoMapper" ,
., -
Profile- 4
{ 
public 
MappingProfile 
( 
) 
{ 	
	CreateMap 
< 
User 
, 
UserDto #
># $
($ %
)% &
;& '
	CreateMap 
< 
UserDto 
, 
User #
># $
($ %
)% &
;& '
} 	
} 
} €?
Ud:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\Program.cs
	namespace 	
user_service
 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
var 
builder 
= 
WebApplication (
.( )
CreateBuilder) 6
(6 7
args7 ;
); <
;< =
builder 
. 
Services 
. 
AddControllers +
(+ ,
), -
.- .
AddJsonOptions. <
(< =
options= D
=>E G
options 
. !
JsonSerializerOptions *
.* +

Converters+ 5
.5 6
Add6 9
(9 :
new: =#
JsonStringEnumConverter> U
(U V
)V W
)W X
)X Y
;Y Z
builder 
. 
Services 
. #
AddEndpointsApiExplorer 4
(4 5
)5 6
;6 7
builder   
.   
Services   
.   
AddAutoMapper   *
(  * +
typeof  + 1
(  1 2
Program  2 9
)  9 :
)  : ;
;  ; <
builder!! 
.!! 
Services!! 
.!! 
AddAuthentication!! .
(!!. /
JwtBearerDefaults!!/ @
.!!@ A 
AuthenticationScheme!!A U
)!!U V
.!!V W
	AddScheme!!W `
<!!` a'
AuthenticationSchemeOptions!!a |
,!!| }*
FirebaseAuthenticationHandler	!!~ õ
>
!!õ ú
(
!!ú ù
JwtBearerDefaults
!!ù Æ
.
!!Æ Ø"
AuthenticationScheme
!!Ø √
,
!!√ ƒ
(
!!≈ ∆
o
!!∆ «
)
!!« »
=>
!!… À
{
!!Ã Õ
}
!!Œ œ
)
!!œ –
;
!!– —
builder"" 
."" 
Services"" 
."" 
AddAuthorization"" -
(""- .
options"". 5
=>""6 8
{## 
options$$ 
.$$ 
	AddPolicy$$ !
($$! "
$str$$" )
,$$) *
policy$$+ 1
=>$$2 4
policy$$5 ;
.$$; <
RequireClaim$$< H
($$H I
$str$$I O
,$$O P
$str$$Q X
)$$X Y
)$$Y Z
;$$Z [
options%% 
.%% 
	AddPolicy%% !
(%%! "
$str%%" (
,%%( )
policy%%* 0
=>%%1 3
policy%%4 :
.%%: ;
RequireClaim%%; G
(%%G H
$str%%H N
,%%N O
$str%%P V
)%%V W
)%%W X
;%%X Y
}&& 
)&& 
;&& 
builder(( 
.(( 
Services(( 
.(( 
AddSwaggerGen(( *
(((* +
option((+ 1
=>((2 4
{)) 
option** 
.** 

SwaggerDoc** !
(**! "
$str**" &
,**& '
new**( +
OpenApiInfo**, 7
{**8 9
Title**: ?
=**@ A
$str**B L
,**L M
Version**N U
=**V W
$str**X \
}**] ^
)**^ _
;**_ `
option++ 
.++ !
AddSecurityDefinition++ ,
(++, -
$str++- 5
,++5 6
new++7 :!
OpenApiSecurityScheme++; P
{,, 
In-- 
=-- 
ParameterLocation-- *
.--* +
Header--+ 1
,--1 2
Description.. 
=..  !
$str.." >
,..> ?
Name// 
=// 
$str// *
,//* +
Type00 
=00 
SecuritySchemeType00 -
.00- .
Http00. 2
,002 3
BearerFormat11  
=11! "
$str11# (
,11( )
Scheme22 
=22 
$str22 %
}33 
)33 
;33 
option44 
.44 "
AddSecurityRequirement44 -
(44- .
new44. 1&
OpenApiSecurityRequirement442 L
{55 
{66 	
new77 !
OpenApiSecurityScheme77 %
{88 
	Reference99 
=99 
new99 
OpenApiReference99  0
{:: 
Type;; 
=;; 
ReferenceType;; &
.;;& '
SecurityScheme;;' 5
,;;5 6
Id<< 
=<< 
$str<< 
}== 
}>> 
,>> 
new?? 
string?? 
[?? 
]?? 
{?? 
}?? 
}@@ 	
}AA 
)AA 
;AA 
}BB 
)BB 
;BB 
builderCC 
.CC 
ServicesCC 
.CC 
AddSingletonCC )
(CC) *
FirebaseAppCC* 5
.CC5 6
CreateCC6 <
(CC< =
newCC= @

AppOptionsCCA K
(CCK L
)CCL M
{DD 

CredentialEE 
=EE 
GoogleCredentialEE -
.EE- .
FromFileEE. 6
(EE6 7
$strEE7 O
)EEO P
}FF 
)FF 
)FF 
;FF 
builderHH 
.HH 
ServicesHH 
.HH 
AddDbContextHH )
<HH) *
AppDbContextHH* 6
>HH6 7
(HH7 8
optionsHH8 ?
=>HH@ B
{II 
optionsJJ 
.JJ 
	UseNpgsqlJJ !
(JJ! "
builderJJ" )
.JJ) *
ConfigurationJJ* 7
.JJ7 8
GetConnectionStringJJ8 K
(JJK L
$strJJL \
)JJ\ ]
)JJ] ^
;JJ^ _
}KK 
)KK 
;KK 
builderLL 
.LL 
ServicesLL 
.LL 
AddHostedServiceLL -
<LL- .
UserConsumerLL. :
>LL: ;
(LL; <
)LL< =
;LL= >
builderNN 
.NN 
ServicesNN 
.NN 
	AddScopedNN &
<NN& '
IUserRepositoryNN' 6
,NN6 7
UserRepositoryNN8 F
>NNF G
(NNG H
)NNH I
;NNI J
builderOO 
.OO 
ServicesOO 
.OO 
	AddScopedOO &
<OO& '
IUserServiceOO' 3
,OO3 4
UserServiceOO5 @
>OO@ A
(OOA B
)OOB C
;OOC D
var`` 
app`` 
=`` 
builder`` 
.`` 
Build`` #
(``# $
)``$ %
;``% &
ifcc 
(cc 
appcc 
.cc 
Environmentcc 
.cc  
IsDevelopmentcc  -
(cc- .
)cc. /
)cc/ 0
{dd 
appee 
.ee 

UseSwaggeree 
(ee 
)ee  
;ee  !
appff 
.ff 
UseSwaggerUIff  
(ff  !
)ff! "
;ff" #
}gg 
appii 
.ii 
UseHttpsRedirectionii #
(ii# $
)ii$ %
;ii% &
appjj 
.jj 
MapControllersjj 
(jj 
)jj  
;jj  !
appkk 
.kk 
UseAuthenticationkk !
(kk! "
)kk" #
;kk# $
appll 
.ll 
UseAuthorizationll  
(ll  !
)ll! "
;ll" #
appmm 
.mm 
UseCorsmm 
(mm 
buildermm 
=>mm  "
buildernn 
.oo
 
WithOriginsoo 
(oo 
$stroo .
)oo. /
.pp
 
AllowAnyMethodpp 
(pp 
)pp 
.qq
 
AllowAnyHeaderqq 
(qq 
)qq 
)qq 
;qq 
appss 
.ss 
Runss 
(ss 
)ss 
;ss 
}vv 	
}ww 
}xx Åt
ld:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\RabbitMQ\Consumer\UserConsumer.cs
	namespace 	
user_service
 
. 
Consumer 
{ 
public 

class 
UserConsumer 
: 
BackgroundService  1
{ 
private 
readonly 
ConnectionFactory *
_factory+ 3
;3 4
private 
readonly 
IServiceProvider )
_serviceProvider* :
;: ;
string 
key 
= 
$str C
;C D
string 
iv 
= 
$str .
;. /
public 
UserConsumer 
( 
IServiceProvider ,
serviceProvider- <
)< =
{ 	
_serviceProvider 
= 
serviceProvider .
;. /
_factory 
= 
new 
ConnectionFactory ,
{ 
HostName 
= 
$str &
,& '"
DispatchConsumersAsync &
=' (
true) -
}   
;   
}!! 	
	protected## 
override## 
async##  
Task##! %
ExecuteAsync##& 2
(##2 3
CancellationToken##3 D
stoppingToken##E R
)##R S
{$$ 	
Console%% 
.%% 
	WriteLine%% 
(%% 
$str%% <
)%%< =
;%%= >
using'' 
var'' 

connection''  
=''! "
_factory''# +
.''+ ,
CreateConnection'', <
(''< =
)''= >
;''> ?
using(( 
var(( 
channel(( 
=(( 

connection((  *
.((* +
CreateModel((+ 6
(((6 7
)((7 8
;((8 9
var** 
queue** 
=** 
$str** 
;**  
channel++ 
.++ 
QueueDeclare++  
(++  !
queue,, 
:,, 
queue,,  
,,,  !
durable-- 
:-- 
false-- "
,--" #
	exclusive.. 
:.. 
false.. $
,..$ %

autoDelete// 
:// 
false//  %
,//% &
	arguments00 
:00 
null00 #
)00# $
;00$ %
channel11 
.11 
BasicQos11 
(11 
$num11 
,11 
$num11  !
,11! "
false11# (
)11( )
;11) *
var22 
consumer22 
=22 
new22 &
AsyncEventingBasicConsumer22 9
(229 :
channel22: A
)22A B
;22B C
channel44 
.44 
BasicConsume44  
(44  !
queue44! &
:44& '
queue44( -
,44- .
autoAck44/ 6
:446 7
false448 =
,44= >
consumer44? G
:44G H
consumer44I Q
)44Q R
;44R S
consumer55 
.55 
Received55 
+=55  
async55! &
(55' (
model55( -
,55- .
ea55/ 1
)551 2
=>553 5
{66 
User77 
response77 
=77 
null77  $
;77$ %
var88 
body88 
=88 
ea88 
.88 
Body88 "
;88" #
var99 
props99 
=99 
ea99 
.99 
BasicProperties99 .
;99. /
var:: 

replyProps:: 
=::  
channel::! (
.::( )!
CreateBasicProperties::) >
(::> ?
)::? @
;::@ A

replyProps;; 
.;; 
CorrelationId;; (
=;;) *
props;;+ 0
.;;0 1
CorrelationId;;1 >
;;;> ?
try<< 
{== 
string>> 
message>> "
=>># $&
DecryptStringFromBytes_Aes>>% ?
(>>? @
body>>@ D
.>>D E
ToArray>>E L
(>>L M
)>>M N
,>>N O
Convert>>P W
.>>W X
FromBase64String>>X h
(>>h i
key>>i l
)>>l m
,>>m n
Convert>>o v
.>>v w
FromBase64String	>>w á
(
>>á à
iv
>>à ä
)
>>ä ã
)
>>ã å
;
>>å ç
intAA 
nAA 
=AA 
intAA 
.AA  
ParseAA  %
(AA% &
messageAA& -
)AA- .
;AA. /
usingCC 
varCC 
scopeCC #
=CC$ %
_serviceProviderCC& 6
.CC6 7
CreateScopeCC7 B
(CCB C
)CCC D
;CCD E
varDD 
userServiceDD #
=DD$ %
scopeDD& +
.DD+ ,
ServiceProviderDD, ;
.DD; <
GetRequiredServiceDD< N
<DDN O
IUserServiceDDO [
>DD[ \
(DD\ ]
)DD] ^
;DD^ _
varEE 
userDetailsEE #
=EE$ %
awaitEE& +
userServiceEE, 7
.EE7 8
GetUserEE8 ?
(EE? @
nEE@ A
)EEA B
;EEB C
responseFF 
=FF 
userDetailsFF *
;FF* +
}GG 
catchHH 
(HH 
	ExceptionHH  
eHH! "
)HH" #
{II 
ConsoleJJ 
.JJ 
	WriteLineJJ %
(JJ% &
$strJJ& -
+JJ. /
eJJ0 1
.JJ1 2
MessageJJ2 9
)JJ9 :
;JJ: ;
responseKK 
=KK 
newKK "
UserKK# '
(KK' (
)KK( )
;KK) *
}MM 
finallyNN 
{OO 
varRR 
responseBytesRR %
=RR& '$
EncryptStringToBytes_AesRR( @
(RR@ A
JsonSerializerRRA O
.RRO P
	SerializeRRP Y
(RRY Z
responseRRZ b
)RRb c
,RRc d
ConvertRRe l
.RRl m
FromBase64StringRRm }
(RR} ~
key	RR~ Å
)
RRÅ Ç
,
RRÇ É
Convert
RRÑ ã
.
RRã å
FromBase64String
RRå ú
(
RRú ù
iv
RRù ü
)
RRü †
)
RR† °
;
RR° ¢
channelSS 
.SS 
BasicPublishSS (
(SS( )
exchangeTT  
:TT  !
$strTT" $
,TT$ %

routingKeyUU "
:UU" #
propsUU$ )
.UU) *
ReplyToUU* 1
,UU1 2
basicPropertiesVV '
:VV' (

replyPropsVV) 3
,VV3 4
bodyWW 
:WW 
responseBytesWW +
)WW+ ,
;WW, -
channelXX 
.XX 
BasicAckXX $
(XX$ %
deliveryTagXX% 0
:XX0 1
eaXX2 4
.XX4 5
DeliveryTagXX5 @
,XX@ A
multipleXXB J
:XXJ K
falseXXL Q
)XXQ R
;XXR S
}YY 
}ZZ 
;ZZ 
await\\ 
Task\\ 
.\\ 
Delay\\ 
(\\ 
Timeout\\ $
.\\$ %
Infinite\\% -
,\\- .
stoppingToken\\/ <
)\\< =
;\\= >
}]] 	
public__ 
override__ 
async__ 
Task__ "
	StopAsync__# ,
(__, -
CancellationToken__- >
cancellationToken__? P
)__P Q
{`` 	
Consoleaa 
.aa 
	WriteLineaa 
(aa 
$straa <
)aa< =
;aa= >
awaitbb 
basebb 
.bb 
	StopAsyncbb  
(bb  !
cancellationTokenbb! 2
)bb2 3
;bb3 4
}cc 	
staticee 
byteee 
[ee 
]ee $
EncryptStringToBytes_Aesee .
(ee. /
stringee/ 5
	plainTextee6 ?
,ee? @
byteeeA E
[eeE F
]eeF G
KeyeeH K
,eeK L
byteeeM Q
[eeQ R
]eeR S
IVeeT V
)eeV W
{ff 	
ifhh 
(hh 
	plainTexthh 
==hh 
nullhh !
||hh" $
	plainTexthh% .
.hh. /
Lengthhh/ 5
<=hh6 8
$numhh9 :
)hh: ;
throwii 
newii !
ArgumentNullExceptionii /
(ii/ 0
$strii0 ;
)ii; <
;ii< =
ifjj 
(jj 
Keyjj 
==jj 
nulljj 
||jj 
Keyjj "
.jj" #
Lengthjj# )
<=jj* ,
$numjj- .
)jj. /
throwkk 
newkk !
ArgumentNullExceptionkk /
(kk/ 0
$strkk0 5
)kk5 6
;kk6 7
ifll 
(ll 
IVll 
==ll 
nullll 
||ll 
IVll  
.ll  !
Lengthll! '
<=ll( *
$numll+ ,
)ll, -
throwmm 
newmm !
ArgumentNullExceptionmm /
(mm/ 0
$strmm0 4
)mm4 5
;mm5 6
bytenn 
[nn 
]nn 
	encryptednn 
;nn 
usingqq 
(qq 
Aesqq 
aesAlgqq 
=qq 
Aesqq  #
.qq# $
Createqq$ *
(qq* +
)qq+ ,
)qq, -
{rr 
aesAlgss 
.ss 
Keyss 
=ss 
Keyss  
;ss  !
aesAlgtt 
.tt 
IVtt 
=tt 
IVtt 
;tt 
ICryptoTransformvv  
	encryptorvv! *
=vv+ ,
aesAlgvv- 3
.vv3 4
CreateEncryptorvv4 C
(vvC D
aesAlgvvD J
.vvJ K
KeyvvK N
,vvN O
aesAlgvvP V
.vvV W
IVvvW Y
)vvY Z
;vvZ [
usingxx 
(xx 
MemoryStreamxx #
	msEncryptxx$ -
=xx. /
newxx0 3
MemoryStreamxx4 @
(xx@ A
)xxA B
)xxB C
{yy 
usingzz 
(zz 
CryptoStreamzz '
	csEncryptzz( 1
=zz2 3
newzz4 7
CryptoStreamzz8 D
(zzD E
	msEncryptzzE N
,zzN O
	encryptorzzP Y
,zzY Z
CryptoStreamModezz[ k
.zzk l
Writezzl q
)zzq r
)zzr s
{{{ 
using|| 
(|| 
StreamWriter|| +
	swEncrypt||, 5
=||6 7
new||8 ;
StreamWriter||< H
(||H I
	csEncrypt||I R
)||R S
)||S T
{}} 
	swEncrypt~~ %
.~~% &
Write~~& +
(~~+ ,
	plainText~~, 5
)~~5 6
;~~6 7
} 
	encrypted
ÄÄ !
=
ÄÄ" #
	msEncrypt
ÄÄ$ -
.
ÄÄ- .
ToArray
ÄÄ. 5
(
ÄÄ5 6
)
ÄÄ6 7
;
ÄÄ7 8
}
ÅÅ 
}
ÇÇ 
}
ÉÉ 
return
ÖÖ 
	encrypted
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
static
àà 
string
àà (
DecryptStringFromBytes_Aes
àà 0
(
àà0 1
byte
àà1 5
[
àà5 6
]
àà6 7

cipherText
àà8 B
,
ààB C
byte
ààD H
[
ààH I
]
ààI J
Key
ààK N
,
ààN O
byte
ààP T
[
ààT U
]
ààU V
IV
ààW Y
)
ààY Z
{
ââ 	
if
ää 
(
ää 

cipherText
ää 
==
ää 
null
ää "
||
ää# %

cipherText
ää& 0
.
ää0 1
Length
ää1 7
<=
ää8 :
$num
ää; <
)
ää< =
throw
ãã 
new
ãã #
ArgumentNullException
ãã /
(
ãã/ 0
$str
ãã0 <
)
ãã< =
;
ãã= >
if
åå 
(
åå 
Key
åå 
==
åå 
null
åå 
||
åå 
Key
åå "
.
åå" #
Length
åå# )
<=
åå* ,
$num
åå- .
)
åå. /
throw
çç 
new
çç #
ArgumentNullException
çç /
(
çç/ 0
$str
çç0 5
)
çç5 6
;
çç6 7
if
éé 
(
éé 
IV
éé 
==
éé 
null
éé 
||
éé 
IV
éé  
.
éé  !
Length
éé! '
<=
éé( *
$num
éé+ ,
)
éé, -
throw
èè 
new
èè #
ArgumentNullException
èè /
(
èè/ 0
$str
èè0 4
)
èè4 5
;
èè5 6
string
ëë 
	plaintext
ëë 
=
ëë 
null
ëë #
;
ëë# $
using
ìì 
(
ìì 
Aes
ìì 
aesAlg
ìì 
=
ìì 
Aes
ìì  #
.
ìì# $
Create
ìì$ *
(
ìì* +
)
ìì+ ,
)
ìì, -
{
îî 
aesAlg
ïï 
.
ïï 
Key
ïï 
=
ïï 
Key
ïï  
;
ïï  !
aesAlg
ññ 
.
ññ 
IV
ññ 
=
ññ 
IV
ññ 
;
ññ 
ICryptoTransform
òò  
	decryptor
òò! *
=
òò+ ,
aesAlg
òò- 3
.
òò3 4
CreateDecryptor
òò4 C
(
òòC D
aesAlg
òòD J
.
òòJ K
Key
òòK N
,
òòN O
aesAlg
òòP V
.
òòV W
IV
òòW Y
)
òòY Z
;
òòZ [
using
öö 
(
öö 
MemoryStream
öö #
	msDecrypt
öö$ -
=
öö. /
new
öö0 3
MemoryStream
öö4 @
(
öö@ A

cipherText
ööA K
)
ööK L
)
ööL M
{
õõ 
using
úú 
(
úú 
CryptoStream
úú '
	csDecrypt
úú( 1
=
úú2 3
new
úú4 7
CryptoStream
úú8 D
(
úúD E
	msDecrypt
úúE N
,
úúN O
	decryptor
úúP Y
,
úúY Z
CryptoStreamMode
úú[ k
.
úúk l
Read
úúl p
)
úúp q
)
úúq r
{
ùù 
using
ûû 
(
ûû 
StreamReader
ûû +
	srDecrypt
ûû, 5
=
ûû6 7
new
ûû8 ;
StreamReader
ûû< H
(
ûûH I
	csDecrypt
ûûI R
)
ûûR S
)
ûûS T
{
üü 
	plaintext
°° %
=
°°& '
	srDecrypt
°°( 1
.
°°1 2
	ReadToEnd
°°2 ;
(
°°; <
)
°°< =
;
°°= >
}
¢¢ 
}
££ 
}
§§ 
}
•• 
return
ßß 
	plaintext
ßß 
;
ßß 
}
®® 	
}
©© 
}™™ ï
ld:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\RabbitMQ\Producer\UserProducer.cs
	namespace 	
user_service
 
. 
Producer 
{ 
public 

class 
UserProducer 
: 
BackgroundService  1
{ 
private 
readonly 
ConnectionFactory *
_factory+ 3
;3 4
private 
readonly 
IServiceProvider )
_serviceProvider* :
;: ;
private 
readonly 
IUserService %
_userService& 2
;2 3
public 
int 
userID 
; 
public 
UserProducer 
( 
IServiceProvider ,
serviceProvider- <
,< =
int> A
userIdB H
,H I
IUserServiceJ V
userServiceW b
)b c
{ 	
userID 
= 
userId 
; 
_serviceProvider 
= 
serviceProvider .
;. /
_factory 
= 
new 
ConnectionFactory ,
(, -
)- .
;. /
_factory 
. 
HostName 
= 
$str  +
;+ ,
_userService 
= 
userService &
;& '
}   	
	protected"" 
override"" 
async""  
Task""! %
ExecuteAsync""& 2
(""2 3
CancellationToken""3 D
stoppingToken""E R
)""R S
{## 	
using$$ 
var$$ 

connection$$  
=$$! "
_factory$$# +
.$$+ ,
CreateConnection$$, <
($$< =
)$$= >
;$$> ?
using%% 
var%% 
channel%% 
=%% 

connection%%  *
.%%* +
CreateModel%%+ 6
(%%6 7
)%%7 8
;%%8 9
User'' 
user'' 
='' 
await'' 
_userService'' *
.''* +
GetUser''+ 2
(''2 3
userID''3 9
)''9 :
;'': ;
var)) 
body)) 
=)) 
Encoding)) 
.))  
UTF8))  $
.))$ %
GetBytes))% -
())- .
user)). 2
.))2 3
ToString))3 ;
()); <
)))< =
)))= >
;))> ?
channel++ 
.++ 
BasicPublish++  
(++  !
exchange++! )
:++) *
$str+++ -
,++- .

routingKey,,! +
:,,+ ,
$str,,- :
,,,: ;
basicProperties--! 0
:--0 1
null--2 6
,--6 7
body..! %
:..% &
body..' +
)..+ ,
;.., -
Console00 
.00 
	WriteLine00 
(00 
$str00 -
,00- .
user00/ 3
)003 4
;004 5
await22 
Task22 
.22 
CompletedTask22 $
;22$ %
}33 	
}44 
}55 ∆	
sd:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\Repository\Interfaces\IUserRepository.cs
	namespace 	
user_service
 
. 

Repository !
.! "

Interfaces" ,
{ 
public		 

	interface		 
IUserRepository		 $
{

 
User 
GetUserByEmail 
( 
string "
email# (
)( )
;) *
Task 
< 
User 
> 
GetUser 
( 
int 
id !
)! "
;" #
User 

CreateUser 
( 
User 
user !
)! "
;" #
User 

UpdateUser 
( 
User 
user !
)! "
;" #
void 

DeleteUser 
( 
int 
id 
) 
;  
Task 
< 
IEnumerable 
< 
User 
> 
> 
GetAllUsers  +
(+ ,
), -
;- .
} 
} ¥'
gd:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\Repository\UserRepository.cs
	namespace

 	
user_service


 
.

 

Repository

 !
{ 
public 

class 
UserRepository 
:  !
IUserRepository" 1
{ 
private 
readonly 
AppDbContext %
_context& .
;. /
public 
UserRepository 
( 
AppDbContext *
context+ 2
)2 3
{ 	
_context 
= 
context 
; 
} 	
public 
User 

CreateUser 
( 
User #
user$ (
)( )
{ 	!
ArgumentNullException !
.! "
ThrowIfNull" -
(- .
user. 2
)2 3
;3 4
_context 
. 
Users 
. 
Add 
( 
user #
)# $
;$ %
_context 
. 
SaveChanges  
(  !
)! "
;" #
return 
user 
; 
} 	
public 
void 

DeleteUser 
( 
int "
id# %
)% &
{ 	
User 
user 
= 
_context  
.  !
Users! &
.& '
FirstOrDefault' 5
(5 6
u6 7
=>8 :
u; <
.< =
Id= ?
==@ B
idC E
)E F
;F G
if   
(   
user   
==   
null   
)   
{!! 
throw"" 
new"" !
ArgumentNullException"" /
(""/ 0
$str""0 @
)""@ A
;""A B
}## 
_context$$ 
.$$ 
Users$$ 
.$$ 
Remove$$ !
($$! "
user$$" &
)$$& '
;$$' (
}%% 	
public'' 
async'' 
Task'' 
<'' 
IEnumerable'' %
<''% &
User''& *
>''* +
>''+ ,
GetAllUsers''- 8
(''8 9
)''9 :
{(( 	
return)) 
await)) 
_context)) !
.))! "
Users))" '
.))' (
ToListAsync))( 3
())3 4
)))4 5
;))5 6
}** 	
public,, 
User,, 
GetUserByEmail,, "
(,," #
string,,# )
email,,* /
),,/ 0
{-- 	
return.. 
_context.. 
... 
Users.. !
...! "
FirstOrDefault.." 0
(..0 1
u..1 2
=>..3 5
u..6 7
...7 8
Email..8 =
==..> @
email..A F
)..F G
;..G H
}// 	
public11 
async11 
Task11 
<11 
User11 
>11 
GetUser11  '
(11' (
int11( +
id11, .
)11. /
{22 	
var33 
user33 
=33 
await33 
_context33 %
.33% &
Users33& +
.33+ ,
FirstOrDefaultAsync33, ?
(33? @
x33@ A
=>33B D
x33E F
.33F G
Id33G I
==33J L
id33M O
)33O P
;33P Q
if44 
(44 
user44 
==44 
null44 
)44 
{55 
throw66 
new66 
	Exception66 #
(66# $
$str66$ 4
)664 5
;665 6
}77 
return99 
user99 
;99 
};; 	
public== 
User== 

UpdateUser== 
(== 
User== #
user==$ (
)==( )
{>> 	
User?? 
userToUpdate?? 
=?? 
_context??  (
.??( )
Users??) .
.??. /
FirstOrDefault??/ =
(??= >
u??> ?
=>??@ B
u??C D
.??D E
Id??E G
==??H J
user??K O
.??O P
Id??P R
)??R S
;??S T
userToUpdate@@ 
.@@ 
Name@@ 
=@@ 
user@@  $
.@@$ %
Name@@% )
;@@) *
userToUpdateAA 
.AA 
GradeAA 
=AA  
userAA! %
.AA% &
GradeAA& +
;AA+ ,
userToUpdateBB 
.BB 
SchoolBB 
=BB  !
userBB" &
.BB& '
SchoolBB' -
;BB- .
_contextCC 
.CC 
UsersCC 
.CC 
UpdateCC !
(CC! "
userToUpdateCC" .
)CC. /
;CC/ 0
returnDD 
userToUpdateDD 
;DD  
}FF 	
}GG 
}HH Ç

cd:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\Services\IUserService.cs
	namespace 	
user_service
 
. 
Services 
{ 
public		 

	interface		 
IUserService		 !
{

 
public 
Task 
< 
IEnumerable 
<  
User  $
>$ %
>% &
GetAllUsers' 2
(2 3
)3 4
;4 5
public 
Task 
< 
User 
> 
GetUser !
(! "
int" %
id& (
)( )
;) *
public 
User 
GetUserByEmail "
(" #
string# )
email* /
)/ 0
;0 1
public 
User 

CreateUser 
( 
User #
user$ (
)( )
;) *
public 
User 

UpdateUser 
( 
User #
user$ (
)( )
;) *
public 
void 

DeleteUser 
( 
int "
id# %
)% &
;& '
} 
} õ
bd:\Kuliah\Fontys\Semester6\Project\study-sync-web-application\user_service\Services\UserService.cs
	namespace 	
user_service
 
. 
Services 
{		 
public

 

class

 
UserService

 
:

 
IUserService

 +
{ 
private 
readonly 
IUserRepository (
_userRepository) 8
;8 9
public 
UserService 
( 
IUserRepository *
userRepository+ 9
)9 :
{ 	
_userRepository 
= 
userRepository ,
;, -
} 	
public 
User 

CreateUser 
( 
User #
user$ (
)( )
{ 	
return 
_userRepository "
." #

CreateUser# -
(- .
user. 2
)2 3
;3 4
} 	
public 
void 

DeleteUser 
( 
int "
id# %
)% &
{ 	
_userRepository 
. 

DeleteUser &
(& '
id' )
)) *
;* +
} 	
public 
async 
Task 
< 
IEnumerable %
<% &
User& *
>* +
>+ ,
GetAllUsers- 8
(8 9
)9 :
{ 	
return 
await 
_userRepository (
.( )
GetAllUsers) 4
(4 5
)5 6
;6 7
} 	
public!! 
User!! 
GetUserByEmail!! "
(!!" #
string!!# )
email!!* /
)!!/ 0
{"" 	
return## 
_userRepository## "
.##" #
GetUserByEmail### 1
(##1 2
email##2 7
)##7 8
;##8 9
}$$ 	
public&& 
async&& 
Task&& 
<&& 
User&& 
>&& 
GetUser&&  '
(&&' (
int&&( +
id&&, .
)&&. /
{'' 	
return(( 
await(( 
_userRepository(( (
.((( )
GetUser(() 0
(((0 1
id((1 3
)((3 4
;((4 5
})) 	
public** 
User** 

UpdateUser** 
(** 
User** #
user**$ (
)**( )
{++ 	
return,, 
_userRepository,, "
.,," #

UpdateUser,,# -
(,,- .
user,,. 2
),,2 3
;,,3 4
}-- 	
}.. 
}// 